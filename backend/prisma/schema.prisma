// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

// Esquema de una colecci√≥n de MongoDB
model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  username     String  @unique
  email        String  @unique
  password     String
  age          Int
  image        String?
  status       Boolean @default(true) // Cuenta eliminada o no
  googleSignIn Boolean @default(false) @ignore

  role Role @default(user)

  seenMedia Media @relation(fields: [mediaId], references: [id]) @ignore

  mediaId String @ignore @db.ObjectId

  suggestions Suggestion[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  groups        Group[]  @relation(fields: [groupsId], references: [id])
  createdGroups Group[]  @relation("ownedBy")
  groupsId      String[] @db.ObjectId

  @@map("users")
}

model Suggestion {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  genres   String[]
  likes    String[]
  dislikes String[]
  author   User     @relation(fields: [authorId], references: [id])
  authorId String   @db.ObjectId

  @@map("suggestions")
}

enum MediaType {
  movie
  series
}

model Media {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  producer String
  type     MediaType
  users     User[]
  image    String?

  @@map("media")
}

model Group {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  ownedBy  User     @relation("ownedBy", fields: [ownerId], references: [id])
  minAge   Int
  maxAge   Int
  image    Json?
  likes    String[]
  dislikes String[]
  users    User[]   @relation(fields: [usersId], references: [id])
  usersId  String[] @db.ObjectId
  ownerId  String   @db.ObjectId

  @@map("groups")
}
